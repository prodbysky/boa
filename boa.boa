def main() {
    let input = "tiny.boa";
    let buffer = "                                                                ";
    let fd = open(input);
    fill_buffer(fd, buffer);
    let buffer_len = strlen(buffer);

    let one_number_char = index_string(buffer, 0);
    if one_number_char == 49 {
        return 0;
    }
    return 1;

    let counter = 0;

    while buffer_len - 1 - counter {
        counter = counter + 1;
    }

    return 0;
}

def deref(pointer) {
    __asm__(
        mov rax, [rdi]
        mov rdx, 0
    );
    return;
}

def index_string(pointer, index) {
    __asm__(
        add rdi, rsi
        movzx rax, byte [rdi]
        mov rdx, 0
    );
    return;
}

def fill_buffer(fd, buffer) {
    let file = fd;
    let count = strlen(buffer);
    let saved_ptr = buffer;
    __asm__(
        mov rax, 0
        mov rdi, [rbp - 8]
        mov rsi, [rbp - 32]
        mov rdx, [rbp - 16]
        syscall
        add rsi, rax
        mov byte [rsi], 0
    );
}

def strlen(str) {
    __asm__(
        mov rax, rdi
        mov rbx, 0
        loop:
        mov cl, [rax]
        cmp cl, 0
        je done
        inc rbx
        inc rax
        jmp loop
        done:
        mov rax, rbx
    );
    return;
}

def write(str) {
    let len = strlen(str);
    __asm__(
        mov rsi, rdi
        mov rdx, rax
        mov rax, 1 
        mov rdi, 1 
        syscall
    );
    return;
}


def open(str) {
    let fd = 1;
    __asm__(   
        mov rdi, rdi
        mov rsi, 0
        mov rdx, 0
        mov rax, 2
        syscall
        mov [rbp - 8], rax
    );
    return fd;
}
